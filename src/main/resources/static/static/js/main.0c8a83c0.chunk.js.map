{"version":3,"sources":["pages/Activities.tsx","apiUtils/webRequest.ts","pages/AskMe.tsx","pages/BannerMsg.tsx","pages/HeaderMsg.tsx","pages/Home.tsx","pages/Signin.tsx","AppRouter.tsx","App.tsx","serviceWorker.ts","index.tsx","images/mainsmile.jpg","images/birds.jpg","images/creative.jpg","images/books.jpg"],"names":["useStyles","makeStyles","theme","icon","marginRight","spacing","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","borderRadius","cardContent","flexGrow","footer","Activities","classes","Fragment","Container","className","maxWidth","Grid","container","item","key","xs","sm","md","Card","CardMedia","image","birdImage","title","CardContent","Typography","gutterBottom","variant","component","CardActions","Button","size","color","creativeImage","booksImage","defaultHeaders","cookie","load","_getHeaders","headers","localStorage","getItem","Authorization","getData","endpoint","axios","create","get","catch","err","request","require","Wit","log","client","accessToken","logger","Logger","DEBUG","onSubmit","e","alert","JSON","stringify","AskMe","useForm","register","handleSubmit","errors","watch","useState","console","useEffect","message","then","data","error","name","defaultValue","ref","required","maxLength","exampleRequired","type","mypic","backgroundImage","mainSmile","font","fontSize","circle","width","BannerMsg","src","style","head","HeaderMsg","Home","React","Component","Copyright","align","Link","href","Date","getFullYear","alignItems","avatar","margin","secondary","main","form","submit","SignIn","props","CssBaseline","Avatar","noValidate","TextField","fullWidth","id","label","autoComplete","autoFocus","FormControlLabel","control","Checkbox","value","onClick","history","push","Box","mt","AppRouter","exact","path","render","children","App","Boolean","window","location","hostname","match","MyContext","createContext","ReactDOM","Provider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.0c8a83c0.chunk.js","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\nimport birdImage from '../images/birds.jpg';\nimport creativeImage from '../images/creative.jpg';\nimport booksImage from '../images/books.jpg';\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright Â© '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                Your Website\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        marginRight: theme.spacing(2),\n    },\n    heroContent: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(8, 0, 6),\n    },\n    heroButtons: {\n        marginTop: theme.spacing(4),\n    },\n    cardGrid: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n    },\n    card: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    cardMedia: {\n        paddingTop: '100%',\n        borderRadius: '50%',\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n    footer: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(6),\n    },\n}));\n\nconst cards = [1, 2, 3];\n\nexport default function Activities() {\n\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <main>\n                <Container className={classes.cardGrid} maxWidth=\"md\">\n                    <Grid container spacing={4}>\n                            <Grid item key={1} xs={12} sm={6} md={4}>\n                                <Card className={classes.card}>\n                                    <CardMedia\n                                        className={classes.cardMedia}\n                                        image={birdImage}\n                                        title=\"Image title\"\n                                    />\n                                    <CardContent className={classes.cardContent}>\n                                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                            Heading\n                                        </Typography>\n                                        <Typography>\n                                            This is a media card. You can use this section to describe the content.\n                                        </Typography>\n                                    </CardContent>\n                                    <CardActions>\n                                        <Button size=\"small\" color=\"primary\">\n                                            Learn More\n                                        </Button>\n                                    </CardActions>\n                                </Card>\n                            </Grid>\n\n\n                        <Grid item key={2} xs={12} sm={6} md={4}>\n                            <Card className={classes.card}>\n                                <CardMedia\n                                    className={classes.cardMedia}\n                                    image={creativeImage}\n                                    title=\"Image title\"\n                                />\n                                <CardContent className={classes.cardContent}>\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                        Heading\n                                    </Typography>\n                                    <Typography>\n                                        This is a media card. You can use this section to describe the content.\n                                    </Typography>\n                                </CardContent>\n                                <CardActions>\n                                    <Button size=\"small\" color=\"primary\">\n                                        Learn More\n                                    </Button>\n                                </CardActions>\n                            </Card>\n                        </Grid>\n\n\n                        <Grid item key={3} xs={12} sm={6} md={4}>\n                            <Card className={classes.card}>\n                                <CardMedia\n                                    className={classes.cardMedia}\n                                    image={booksImage}\n                                    title=\"Image title\"\n                                />\n                                <CardContent className={classes.cardContent}>\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                        Heading\n                                    </Typography>\n                                    <Typography>\n                                        This is a media card. You can use this section to describe the content.\n                                    </Typography>\n                                </CardContent>\n                                <CardActions>\n                                    <Button size=\"small\" color=\"primary\">\n                                        Learn More\n                                    </Button>\n                                </CardActions>\n                            </Card>\n                        </Grid>\n\n                    </Grid>\n                </Container>\n            </main>\n        </React.Fragment>\n    );\n}\n","import axios, { AxiosResponse } from \"axios\";\nimport cookie from \"react-cookies\";\n\n\nconst defaultHeaders = {\n    \"Content-Type\": \"application/json\",\n    \"Access-Control-Allow-Credentials\": \"true\",\n    \"X-XSRF-TOKEN\": cookie.load(\"XSRF-TOKEN\")\n};\n\nconst _getHeaders = () => {\n    let headers = defaultHeaders;\n    if (localStorage.getItem(\"auth\")) {\n        // @ts-ignore\n        headers.Authorization = `Bearer ${localStorage.getItem(\"auth\")}`;\n    }\n    return headers;\n};\n\nconst _postHeaders = () => {\n    let headers = _getHeaders();\n       //  headers[\"X-XSRF-TOKEN\"] = csrf;\n    return headers;\n};\n\nconst performGet = (endpoint: string): Promise<AxiosResponse> => {\n    const instance = axios.create({ headers: _getHeaders() });\n    return instance.get(`/${endpoint}`).catch(err => err.request);\n};\n\nconst performPost = (endpoint: string, data: any): Promise<AxiosResponse> => {\n    const instance = axios.create({ headers: _postHeaders() });\n    return instance\n        .post(`/${endpoint}`, JSON.stringify(data))\n        .catch(err => err.request);\n};\n\nconst performPut = (endpoint: string, data: any): Promise<AxiosResponse> => {\n    const instance = axios.create({ headers: _postHeaders() });\n    return instance.put(`/${endpoint}`, data).catch(err => err.request);\n};\n\n\nexport const getData = (): Promise<AxiosResponse> => {\n    return   performGet(\"getData\");\n}\n","import React, {useEffect, useState} from 'react';\nimport {RouteComponentProps} from \"react-router-dom\";\nimport {useForm} from \"react-hook-form\";\nimport {getData} from \"../apiUtils/webRequest\";\n\nconst {Wit, log} = require('node-wit');\n\nconst client = new Wit({\n    accessToken: 'CCRYRDP6SW7CWRVE5VGUBPH34MIOBYNV',\n    logger: new log.Logger(log.DEBUG) // optional\n});\n\n\nfunction onSubmit(e: any) {\n    alert('here submit' + JSON.stringify(e))\n}\n\nexport default function AskMe() {\n    const {register, handleSubmit, errors, watch } = useForm();\n    const [count, setCount] = useState(0);\n\n    console.log(watch(\"example\")); // you can watch individual input by pass the name of the input\n\n    useEffect(() => {\n        getData();\n        client.message('What is happening tomorrow ?').then((data: any) => {\n            console.log('Ask Me: Yay, got Wit.ai response: ' + JSON.stringify(data));\n        })\n            .catch('AskMe:' + console.error);\n    });\n\n    return (\n        <div className=\"Page1\">\n            Ask Me\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <label>Example</label>\n                <input name=\"example\" defaultValue=\"test\" ref={register} />\n                <label>ExampleRequired</label>\n                <input\n                    name=\"exampleRequired\"\n                    ref={register({ required: true, maxLength: 10 })}\n                />\n                {errors.exampleRequired && <p>This field is required</p>}\n                <input type=\"submit\" />\n            </form>\n        </div>\n    )\n};\n","import React, {useEffect, useState} from 'react';\nimport mainSmile from '../images/mainsmile.jpg';\nimport Container from \"@material-ui/core/Container\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n    mypic: {\n        backgroundImage: mainSmile,\n        color: 'black',\n        font: 'perpetua',\n        fontSize: 'large',\n        height: '10%',\n    },\n    circle: {\n          width: '100px',\n          height: 80,\n          borderRadius: '50%',\n    },\n});\n\nexport default function BannerMsg() {\n    const classes = useStyles();\n    return (\n        <div>\n            <Container className={classes.mypic}>\n                <img src={mainSmile} style={{width: '100%'}}/>\n            </Container>\n        </div>\n    )\n};\n","import React, {useEffect, useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from \"@material-ui/core/Container\";\nimport mainSmile from '../images/mainsmile.jpg';\n\nconst useStyles = makeStyles({\n    head: {\n        background: '#FBD0BE',\n        color: 'black',\n        height: 90,\n        width: '95%',\n        fontSize: 'large',\n    },\n});\n\nexport default function HeaderMsg() {\n    const classes = useStyles();\n    return (<Container className={classes.head}>\n                <h2>Positively Tonya</h2>\n                <h2>A Southern Lifestyle brand.</h2>\n            </Container>\n    )\n};\n","import React from 'react';\nimport {RouteComponentProps} from \"react-router-dom\";\nimport Activities from \"./Activities\";\nimport AskMe from \"./AskMe\";\nimport BannerMsg from \"./BannerMsg\";\nimport HeaderMsg from \"./HeaderMsg\";\nimport Grid from '@material-ui/core/Grid';\n\nclass Home extends React.Component<RouteComponentProps> {\n\n    render() {\n\n        return (\n            <div>\n                <Grid container>\n                    <Grid item xs={12}>\n                        <HeaderMsg/>\n                        <BannerMsg/>\n                    </Grid>\n                </Grid>\n                <Activities/>\n                <AskMe/>\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport {RouteComponentProps} from \"react-router-dom\";\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright Â© '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                Your Website\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport default function SignIn(props: RouteComponentProps) {\n    const classes = useStyles();\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n                </Typography>\n                <form className={classes.form} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                    />\n                    <FormControlLabel\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\n                        label=\"Remember me\"\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={() => {\n                            props.history.push('/home');\n                        }}\n                    >\n                        Sign In\n                    </Button>\n                    <Grid container>\n                        <Grid item xs>\n                            <Link href=\"#\" variant=\"body2\">\n                                Forgot password?\n                            </Link>\n                        </Grid>\n                        <Grid item>\n                            <Link href=\"#\" variant=\"body2\">\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n            <Box mt={8}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}\n","import React from 'react';\nimport {BrowserRouter, Route, RouteComponentProps, Switch} from 'react-router-dom';\n\nimport Home from \"./pages/Home\";\nimport SignIn from \"./pages/Signin\";\n\nconst AppRouter: React.FC = (props ) => {\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route exact\n                       path=\"/home\"\n                       render={(props: RouteComponentProps) => (\n                           <Home {...props} />\n                       )}\n                />\n                <Route exact\n                       path=\"/ask\"\n                       render={(props: RouteComponentProps) => (\n                           <Home {...props} />\n                       )}\n                />\n                <Route exact\n                       path=\"/\"\n                       render={(props: RouteComponentProps) => (\n                           <SignIn {...props} />\n                       )}\n                />\n            </Switch>\n            {props.children}\n        </BrowserRouter>\n    );\n};\n\nexport default AppRouter;\n","import React from 'react';\nimport './App.css';\nimport AppRouter from \"./AppRouter\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <AppRouter/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst MyContext = React.createContext('');\n\nReactDOM.render(\n    <MyContext.Provider value={'works'}>\n    <App />\n    </MyContext.Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/mainsmile.5d34a240.jpg\";","module.exports = __webpack_public_path__ + \"static/media/birds.e48e89b5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/creative.255c533f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/books.0052e70a.jpg\";"],"sourceRoot":""}